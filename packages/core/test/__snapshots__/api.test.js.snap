// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`/processor.js API ._resolve() should fall back to a default resolver 1`] = `
Array [
  "fixtures/local.css",
]
`;

exports[`/processor.js API ._resolve() should run resolvers until a match is found 1`] = `
Array [
  "fixtures/local.css",
]
`;

exports[`/processor.js API .dependencies() should return the dependencies of the specified file 1`] = `
Array [
  "fixtures/folder/folder.css",
  "fixtures/local.css",
]
`;

exports[`/processor.js API .dependencies() should return the overall order of dependencies if no file is specified 1`] = `
Array [
  "fixtures/folder/folder.css",
  "fixtures/local.css",
  "fixtures/start.css",
]
`;

exports[`/processor.js API .dependents() should return the dependents of the specified file 1`] = `
Array [
  "fixtures/start.css",
]
`;

exports[`/processor.js API .dependents() should throw if no file is passed 1`] = `"Must provide a file to processor.dependants()"`;

exports[`/processor.js API .file() should process a relative file 1`] = `
Object {
  "fooga": Array [
    "fooga",
  ],
  "str": "\\"string\\"",
}
`;

exports[`/processor.js API .file() should process a relative file 2`] = `
Object {
  "fooga": Array [
    "fooga",
  ],
  "str": "\\"string\\"",
}
`;

exports[`/processor.js API .file() should process a relative file 3`] = `
"@value str: \\"string\\";

.fooga {
    color: red;
}
"
`;

exports[`/processor.js API .file() should process a relative file 4`] = `
".fooga {
    color: red;
}
"
`;

exports[`/processor.js API .file() should process an absolute file 1`] = `
Object {
  "fooga": Array [
    "fooga",
  ],
  "str": "\\"string\\"",
}
`;

exports[`/processor.js API .file() should process an absolute file 2`] = `
Object {
  "fooga": Array [
    "fooga",
  ],
  "str": "\\"string\\"",
}
`;

exports[`/processor.js API .file() should process an absolute file 3`] = `
"@value str: \\"string\\";

.fooga {
    color: red;
}
"
`;

exports[`/processor.js API .file() should process an absolute file 4`] = `
".fooga {
    color: red;
}
"
`;

exports[`/processor.js API .output() should allow for seperate source map output 1`] = `
Object {
  "file": "to.css",
  "mappings": "AAAA,gCAAC;AACD,UAAU,YAAY,EAAE;ACDxB,wBAAC;AAID,SAAS,kBAAkB,EAAE;ACJ7B,wBAAC;AAED,SDFA,WAAgB,CAChB,iBAAiB,ECCsB;AACvC,SFHA,wBAAqB,EEGe",
  "names": Array [],
  "sources": Array [
    "fixtures/folder/folder.css",
    "fixtures/local.css",
    "fixtures/start.css",
  ],
  "sourcesContent": Array [
    "@value folder: white;
.folder { margin: 2px; }
",
    "@value one: red;
@value two: blue;
@value folder from \\"./folder/folder.css\\";

.booga { background: green; }
.looga { composes: booga; }
",
    "@value one, two, folder from \\"./local.css\\";
.wooga { composes: booga from \\"./local.css\\"; }
.booga { color: one; background: two; }
.tooga { border: 1px solid folder; }
",
  ],
  "version": 3,
}
`;

exports[`/processor.js API .output() should avoid duplicating files in the output 1`] = `
"/* fixtures/folder/folder.css */
.folder { margin: 2px; }
/* fixtures/local.css */
.booga { background: green; }
/* fixtures/start.css */
.booga { color: red; background: blue; }
.tooga { border: 1px solid white; }
"
`;

exports[`/processor.js API .output() should generate a JSON structure of all the compositions 1`] = `
Object {
  "fixtures/folder/folder.css": Object {
    "folder": "folder",
  },
  "fixtures/local.css": Object {
    "booga": "booga",
    "folder": "white",
    "looga": "booga looga",
    "one": "red",
    "two": "blue",
  },
  "fixtures/start.css": Object {
    "booga": "booga",
    "folder": "white",
    "one": "red",
    "tooga": "tooga",
    "two": "blue",
    "wooga": "booga wooga",
  },
}
`;

exports[`/processor.js API .output() should generate css representing the output from all added files 1`] = `
"/* fixtures/folder/folder.css */
.folder { margin: 2px; }
/* fixtures/simple.css */
.fooga {
    color: red;
}
/* fixtures/local.css */
.booga { background: green; }
/* fixtures/start.css */
.booga { color: red; background: blue; }
.tooga { border: 1px solid white; }
"
`;

exports[`/processor.js API .output() should order output by dependencies, then alphabetically 1`] = `
"/* fixtures/folder/folder.css */
.folder { margin: 2px; }
/* fixtures/folder/folder2.css */
.folder2 { color: green; }
/* fixtures/folder/subfolder/subfolder.css */
.subfolder { color: yellow; }
/* fixtures/composes.css */
/* fixtures/deep.css */
.deep {
    
    color: black;
}
/* fixtures/local.css */
.booga { background: green; }
/* fixtures/start.css */
.booga { color: red; background: blue; }
.tooga { border: 1px solid white; }
"
`;

exports[`/processor.js API .output() should reject if called before input has been processed 1`] = `[Error: File processing not complete]`;

exports[`/processor.js API .output() should return a postcss result 1`] = `
"/* fixtures/folder/folder.css */
.folder { margin: 2px; }
/* fixtures/local.css */
.booga { background: green; }
/* fixtures/start.css */
.booga { color: red; background: blue; }
.tooga { border: 1px solid white; }
"
`;

exports[`/processor.js API .output() should support returning output for specified absolute files 1`] = `
"/* fixtures/start.css */
.booga { color: red; background: blue; }
.tooga { border: 1px solid white; }
"
`;

exports[`/processor.js API .output() should support returning output for specified relative files 1`] = `
"/* fixtures/start.css */
.booga { color: red; background: blue; }
.tooga { border: 1px solid white; }
"
`;

exports[`/processor.js API .remove() should remove a relative file 1`] = `Array []`;

exports[`/processor.js API .remove() should remove an absolute file 1`] = `Array []`;

exports[`/processor.js API .remove() should remove multiple files 1`] = `
Array [
  "c.css",
]
`;

exports[`/processor.js API .remove() should return an array of removed files 1`] = `
Array [
  "a.css",
  "b.css",
]
`;

exports[`/processor.js API .string() should process a string 1`] = `
Object {
  "wooga": Array [
    "wooga",
  ],
}
`;

exports[`/processor.js API .string() should process a string 2`] = `
Object {
  "wooga": Array [
    "wooga",
  ],
}
`;

exports[`/processor.js API .string() should process a string 3`] = `".wooga { }"`;

exports[`/processor.js API .string() should process a string 4`] = `".wooga { }"`;
